plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

apply plugin: 'java'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    systemProperty "file.encoding", "utf-8"
}

group 'com.minfin'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.15.0'
    junitVersion = '5.8.0'
    lombokVersion = '1.18.20'
    retrofitVersion = '2.7.2'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    testImplementation('com.codeborne:selenide:5.24.3')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation('org.assertj:assertj-core:3.20.2')
    testImplementation('org.slf4j:slf4j-simple:1.7.32')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testImplementation('io.rest-assured:rest-assured:4.4.0')
    testImplementation('io.rest-assured:json-schema-validator:4.4.0')
    testImplementation('io.rest-assured:json-path:4.4.0')
    testImplementation("com.squareup.retrofit2:retrofit:${retrofitVersion}")
    testImplementation("com.squareup.retrofit2:converter-gson:${retrofitVersion}")
    testImplementation('com.google.code.gson:gson:2.8.8')
    implementation 'com.github.javafaker:javafaker:1.0.2'

}

test {
    useJUnitPlatform()
}
allure {
    autoconfigure = true
    version = "${allureVersion}"
    configuration = "compile"

    useJUnit5 {
        version = "${allureVersion}"
    }
}